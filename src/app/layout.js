<<<<<<< HEAD
// import { Geist, Geist_Mono } from "next/font/google";
// import "../styles/globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }












// "use client"; // Required for Zustand

// import { Geist, Geist_Mono } from "next/font/google";
// import "../styles/globals.css";
// import { useEffect } from "react";
// import useThemeStore, { loadTheme } from "@/store/themeStore"; // Import Zustand store and loadTheme

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export default function RootLayout({ children }) {
//   const { darkMode, initializeTheme } = useThemeStore();

//   // Apply theme before rendering
//   useEffect(() => {
//     loadTheme(); // Apply dark/light theme immediately
//     initializeTheme(); // Sync Zustand state
//   }, []);

//   return (
//     <html lang="en" className={darkMode ? "dark" : ""}>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased transition-all duration-300 ${
//           darkMode ? "bg-gray-900 text-white" : "bg-white text-black"
//         }`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }


"use client"; // Required for Zustand

import { Geist, Geist_Mono } from "next/font/google";
import "../styles/globals.css";
import { useEffect, useCallback } from "react";
import useThemeStore, { loadTheme } from "@/store/themeStore"; // Import Zustand store

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
=======
"use client";

import "../styles/globals.css";
import { useEffect } from "react";
import useThemeStore from "@/store/themeStore";
import { Inter, Roboto_Mono } from "next/font/google";

const inter = Inter({
  variable: "--font-sans",
  subsets: ["latin"],
  weight: ["400", "700"],
});

const robotoMono = Roboto_Mono({
  variable: "--font-mono",
  subsets: ["latin"],
  weight: ["400", "700"],
>>>>>>> 9d719e0 (add dark mode functionlity)
});

export default function RootLayout({ children }) {
  const { darkMode, initializeTheme } = useThemeStore();

<<<<<<< HEAD
  // Ensure initializeTheme doesn't change on re-renders
  const initTheme = useCallback(() => {
    loadTheme(); // Load from localStorage before Zustand sync
    initializeTheme(); // Sync Zustand state
  }, [initializeTheme]);

  useEffect(() => {
    initTheme();
  }, [initTheme]);
=======
  useEffect(() => {
    initializeTheme();
  }, [initializeTheme]);
>>>>>>> 9d719e0 (add dark mode functionlity)

  return (
    <html lang="en" className={darkMode ? "dark" : ""}>
      <body
<<<<<<< HEAD
        className={`${geistSans.variable} ${geistMono.variable} antialiased transition-all duration-300 ${
          darkMode ? "bg-gray-900 text-white" : "bg-white text-black"
        }`}
=======
        className={`${inter.variable} ${robotoMono.variable} antialiased transition-all duration-300 bg-white text-black dark:bg-darkBg dark:text-darkText`}
>>>>>>> 9d719e0 (add dark mode functionlity)
      >
        {children}
      </body>
    </html>
  );
}